name: Canadian

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        host_arch:
          - x86_64
          - aarch64
          - mingw-w64
        version:
          - legacy
          - stable
          - mainline
          - latest
          - oldworld
        target:
          - loongarch64-unknown-linux-gnu
          - loongarch64-unknown-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: canadian
          fetch-depth: 1
      - name: Build
        id: build
        run: |
          sudo rm -rf /opt/*
          ./scripts/make ${{ matrix.target }} ${{ matrix.version }} ${{ matrix.host_arch }}

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.FILE_NAME }}.tar.xz
          path: ${{ steps.build.outputs.FILE_NAME }}.tar.xz
          if-no-files-found: error
          retention-days: 1
      - name: Upload checksum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.FILE_NAME }}.tar.xz.sha256
          path: ${{ steps.build.outputs.FILE_NAME }}.tar.xz.sha256
          if-no-files-found: error
          retention-days: 1

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: canadian
          fetch-depth: 1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          pattern: "*.tar.*"
          merge-multiple: true
      - name: Generate checksums
        run: |
          echo "| Filename | Sha256sum |" > RELEASE.md
          echo "| -------- | --------- |" >> RELEASE.md
          for i in release/*.sha256; do
            echo "| $(basename $i .sha256) | $(cat $i) |" >> RELEASE.md
          done
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          tag_name="canadian-$(date +%Y%m%d)"
          echo "tag_name=${tag_name}" >> $GITHUB_ENV
          git tag ${tag_name} || true
          git push origin ${tag_name} || true
          gh release create ${tag_name} --title "${tag_name}" --generate-notes --prerelease || true
      - name: Upload artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for i in release/*.tar.xz; do
            # gh release upload ${{ env.tag_name }} $i $i.sha256
            gh release upload ${{ env.tag_name }} $i
          done
          gh release edit ${{ env.tag_name }} -F RELEASE.md
