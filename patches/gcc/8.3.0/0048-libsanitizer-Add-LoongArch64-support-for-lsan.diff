From e36ab7e2af83597faec4f1b33f33380f5fcc3c8b Mon Sep 17 00:00:00 2001
From: Yang Yujie <yangyujie@loongson.cn>
Date: Mon, 11 Dec 2023 16:49:23 +0800
Subject: [PATCH 07/15] libsanitizer: Add LoongArch64 support for lsan.

Change-Id: I718f3eb36e5f9b9a7ac7a5515036eecf15629083
---
 src/libsanitizer/lsan/lsan_allocator.cc | 2 +-
 src/libsanitizer/lsan/lsan_allocator.h  | 2 +-
 src/libsanitizer/lsan/lsan_common.cc    | 3 +++
 src/libsanitizer/lsan/lsan_common.h     | 2 +-
 4 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/libsanitizer/lsan/lsan_allocator.cc b/src/libsanitizer/lsan/lsan_allocator.cc
index 9e1668077..4dd33b726 100644
--- a/src/libsanitizer/lsan/lsan_allocator.cc
+++ b/src/libsanitizer/lsan/lsan_allocator.cc
@@ -26,7 +26,7 @@ extern "C" void *memset(void *ptr, int value, uptr num);
 namespace __lsan {
 #if defined(__i386__) || defined(__arm__)
 static const uptr kMaxAllowedMallocSize = 1UL << 30;
-#elif defined(__mips64) || defined(__aarch64__)
+#elif defined(__mips64) || defined(__aarch64__)|| SANITIZER_LOONGARCH64
 static const uptr kMaxAllowedMallocSize = 4UL << 30;
 #else
 static const uptr kMaxAllowedMallocSize = 8UL << 30;
diff --git a/src/libsanitizer/lsan/lsan_allocator.h b/src/libsanitizer/lsan/lsan_allocator.h
index b0c0ec241..a130aeb16 100644
--- a/src/libsanitizer/lsan/lsan_allocator.h
+++ b/src/libsanitizer/lsan/lsan_allocator.h
@@ -49,7 +49,7 @@ struct ChunkMetadata {
 };
 
 #if defined(__mips64) || defined(__aarch64__) || defined(__i386__) || \
-    defined(__arm__)
+    defined(__arm__) || SANITIZER_LOONGARCH64
 static const uptr kRegionSizeLog = 20;
 static const uptr kNumRegions = SANITIZER_MMAP_RANGE_SIZE >> kRegionSizeLog;
 typedef TwoLevelByteMap<(kNumRegions >> 12), 1 << 12> ByteMap;
diff --git a/src/libsanitizer/lsan/lsan_common.cc b/src/libsanitizer/lsan/lsan_common.cc
index 4afce9df0..403e83db2 100644
--- a/src/libsanitizer/lsan/lsan_common.cc
+++ b/src/libsanitizer/lsan/lsan_common.cc
@@ -140,6 +140,9 @@ static inline bool CanBeAHeapPointer(uptr p) {
   unsigned runtimeVMA =
     (MostSignificantSetBitIndex(GET_CURRENT_FRAME()) + 1);
   return ((p >> runtimeVMA) == 0);
+#elif SANITIZER_LOONGARCH64
+  // At least it should be a user-space address.
+  return ((p >> 40) == 0);
 #else
   return true;
 #endif
diff --git a/src/libsanitizer/lsan/lsan_common.h b/src/libsanitizer/lsan/lsan_common.h
index e99cd9e1b..476d9b1cf 100644
--- a/src/libsanitizer/lsan/lsan_common.h
+++ b/src/libsanitizer/lsan/lsan_common.h
@@ -31,7 +31,7 @@
 #if (SANITIZER_LINUX && !SANITIZER_ANDROID || SANITIZER_MAC) && \
     (SANITIZER_WORDSIZE == 64) &&                               \
     (defined(__x86_64__) || defined(__mips64) || defined(__aarch64__) || \
-     defined(__powerpc64__))
+     defined(__powerpc64__) || SANITIZER_LOONGARCH64)
 #define CAN_SANITIZE_LEAKS 1
 #elif defined(__i386__) && \
     (SANITIZER_LINUX && !SANITIZER_ANDROID || SANITIZER_MAC)
-- 
2.39.3

